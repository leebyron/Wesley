{"ts":1349520440904,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var libxmljs = require('libxmljs');\nvar CraigListing = require('./CraigListing.js');\nvar CraigRequest = require('./CraigRequest.js');\n\nfunction CraigSource() {\n  this.max = '';\n  this.min = 1000;\n  this.bedrooms = '';\n  this.query = '';\n}\n\nmodule.exports = CraigSource;\n\nCraigSource.prototype.fetchQuery = function () {\n  var path = '/search/apa/sfc?query=' + this.query + '&srchType=A&minAsk=' +\n    this.min + '&maxAsk=' + this.max + '&bedrooms=' + this.bedrooms + '&format=rss';\n\n  CraigRequest.get(path, function (error, data) {\n    if (!data) {\n      console.error(error);\n      return;\n    }\n    //console.log(data);\n    var xmlDoc = libxmljs.parseXmlString(data);\n    var items = xmlDoc.root().find('xmlns:item', 'http://purl.org/rss/1.0/');\n    for (var ii in items) {\n      //try {\n        var listing = CraigListing.fromRSS(items[ii]);\n\n        if (!listing) {\n          // there was a problem, or the listing was blacklisted\n          continue;\n        }\n\n        // TODO: test to ensure existing ID doesn't already exist\n        listing.loadAdditionalInformation(function (error) {\n          if (error) {\n            console.error(error);\n            return;\n          }\n          console.log(this);\n        }.bind(listing));\n      //} catch (exception) {\n      //  console.error(exception);\n      //}\n//      break; // just testing one load for now\n    }\n  });\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":1377}]],"length":1377}
